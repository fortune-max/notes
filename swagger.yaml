openapi: 3.0.3
info:
  title: Swagger Notes - OpenAPI 3.0
  description: This is a Notes Server based on the OpenAPI 3.0 specification.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://localhost/api/notes
tags:
  - name: notes
    description: Operations about notes
  - name: category
    description: Notes categories
  - name: user
    description: Operations about user
  - name: auth
    description: Operations about authentication
paths:
  /notes:
    get:
      tags:
        - notes
      summary: Get notes
      description: Returns all notes for the current user. Public notes are returned when the user is not authenticated.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
    post:
      tags:
        - notes
      summary: Add a new note
      description: Add a new note
      parameters:
        - name: json
          in: query
          description: If to return response as JSON object or not
          required: false
          schema:
            type: boolean
      requestBody:
        description: Create a new note
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      responses:
        '200':
          description: Note created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '400':
          description: Invalid input
  /notes/{noteId}:
    get:
      tags:
        - notes
      summary: Find note by ID
      description: Returns a single note
      parameters:
        - name: noteId
          in: path
          description: ID of note to return
          required: true
          schema:
            type: integer
            format: int32
        - name: json
          in: query
          description: If to return response as JSON object or not
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Retrieved note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '404':
          description: Note not found
    post:
      tags:
        - notes
      summary: Insert a new note with an id
      description: Insert a new note with an id
      parameters:
        - name: noteId
          in: path
          description: ID of note to return
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Insert a new note with specified ID in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      responses:
        '200':
          description: Note inserted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '400':
          description: Invalid input
    put:
      tags:
        - notes
      summary: Update an existing note
      description: Update an existing note
      parameters:
        - name: noteId
          in: path
          description: ID of note to return
          required: true
          schema:
            type: integer
            format: int32
        - name: json
          in: query
          description: If to return response as JSON object or not
          required: false
          schema:
            type: boolean
      requestBody:
        description: Update an existing note in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      responses:
        '200':
          description: Note updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '404':
          description: Note not found
    patch:
      tags:
        - notes
      summary: Append to an existing note
      description: Append to an existing note
      parameters:
        - name: noteId
          in: path
          description: ID of note to return
          required: true
          schema:
            type: integer
            format: int32
        - name: json
          in: query
          description: If to return response as JSON object or not
          required: false
          schema:
            type: boolean
      requestBody:
        description: Update an existing note in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      responses:
        '200':
          description: Note updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '404':
          description: Note not found
    delete:
      tags:
        - notes
      summary: Deletes a note
      description: Deletes a note
      parameters:
        - name: noteId
          in: path
          description: Note id to delete
          required: true
          schema:
            type: integer
            format: int32
        - name: json
          in: query
          description: If to return response as JSON object or not
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Deleted note
        '404':
          description: Note not found
  /categories:
    get:
      tags:
        - category
      summary: Returns all note categories for current user
      description: Returns all note categories for current user
      responses:
        '200':
          description: Returns all note categories for current user
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /categories/{categoryId}:
    get:
      tags:
        - category
      summary: Returns all notes by current user with category
      description: Returns all notes by current user with category
      parameters:
        - name: categoryId
          in: path
          description: ID of category to return notes
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
    delete:
      tags:
        - category
      summary: Deletes all notes by current user with category
      description: Deletes all notes by current user with category
      parameters:
        - name: categoryId
          in: path
          description: Category id to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted notes with category
        '404':
          description: Category not found
  /register:
    post:
      tags:
        - user
      summary: Create user
      description: Adds a new user who can submit notes tied to their account
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Successfully added user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '409':
          description: User already exists
        '400':
          description: Bad request, missing username and/or password
  /users/{username}:
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      parameters:
        - name: username
          in: path
          description: The username of account to be deleted
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted user and their notes
        '401':
          description: Unauthorized
  /login:
    get:
      tags:
        - auth
      summary: Logs user into the system using Basic Auth
      description: Returns a 401 or 200 based on if the user is logged in
      responses:
        '200':
          description: Successful login
        '401':
          description: Unauthorized
  /logout:
    get:
      tags:
        - auth
      summary: Logs out current logged in user session
      description: Logs out current logged in user session
      responses:
        '401':
          description: Successful logout
components:
  schemas:
    Note:
      type: object
      properties:
        noteId:
          type: integer
          format: int32
        title:
          type: string
        content:
          type: string
        categories:
          type: array
          items:
            type: string
        created:
          type: string
          format: date-time
        last_modified:
          type: string
          format: date-time
        username:
          type: string
          format: int32
      required:
        - content
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
